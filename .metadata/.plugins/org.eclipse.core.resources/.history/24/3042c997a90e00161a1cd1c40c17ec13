package Trie;

import java.util.HashMap;
import java.util.Map;

class TrieNode {
    // Initialize your data structure here.
    char c;
    Map<Character, TrieNode> children;
    public TrieNode() {
        this.children = new HashMap<Character, TrieNode>();
    }
    public TrieNode(char c){
        this();
        this.c = c;
    }
    public void insert(String word) {
        if(word == null || word.length() == 0) return;
        char first = word.charAt(0);
        if(!this.children.containsKey(first)) this.children.put(first, new TrieNode(first));
        this.children.get(first).insert(word.substring(1));
    }
    
    public boolean search(String word) {
        if (word == null || word.length() == 0) return true;
        if (word.charAt(0) == c) {
            if(word.length() == 1) {
            	if(this.children.size() == 0) return true;
            	else return false;
            }
            if(this.children.containsKey(word.charAt(1))) return this.children.get(word.charAt(1)).search(word.substring(1));
            else return false;
        }
        return false;
    }
    
    public boolean startsWith(String word) {
        if (word == null || word.length() == 0) return true;
        if (word.charAt(0) == c) {
            if(word.length() == 1) return true;
            if(this.children.containsKey(word.charAt(1))) return this.children.get(word.charAt(1)).search(word.substring(1));
            else return false;
        }
        return false;
    }
}