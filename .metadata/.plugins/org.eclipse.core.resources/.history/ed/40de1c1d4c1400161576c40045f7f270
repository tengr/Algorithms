package GoogleCodeJam;

import java.util.Scanner;

public class Remove {
	public static void main(String[] args) {
    	Solution ins = new Solution();
    	Scanner sc = new Scanner(System.in);
    	int testCase = sc.nextInt();
    	for(int i = 1; i <= testCase; i++) System.out.println("Case #" + i + ": " + ins.solve(sc.next()));
    	sc.close();
    }
	public String solve(String s){
		int[] freq = new int[26];
		int[] count = new int[10];
		for(int i = 0; i < s.length(); i++) freq[s.charAt(i) - 'A']++;
		count[2] = removeTwo(freq, count);
		count[2] = removeSix(freq, count);
		count[7] = removeSeven(freq, count);
		count[5] = removeFive(freq, count);
		count[4] = removeFour(freq, count);
		count[1] = removeOne(freq, count);
		count[8] = removeEight(freq, count);
		
		
		
	}
	
	public int removeTwo(int[] freq, int[] count){
		int wCount = freq['W' - 'A'];
		if(wCount == 0) return 0;
		count['T'-'A'] -= wCount;
		count['W'-'A'] -= wCount;
		count['O'-'A'] -= wCount;
		return wCount;
	}
	
	public int removeSix(int[] freq, int[] count){
		int xCount = freq['X' - 'A'];
		if(xCount == 0) return 0;
		count['S'-'A'] -= xCount;
		count['I'-'A'] -= xCount;
		count['X'-'A'] -= xCount;
		return xCount;
	}
	
	public int removeSeven(int[] freq, int[] count){
		int sCount = freq['S' - 'A'];
		if(sCount == 0) return 0;
		count['S'-'A'] -= sCount;
		count['E'-'A'] -= sCount;
		count['V'-'A'] -= sCount;
		count['E'-'A'] -= sCount;
		count['N'-'A'] -= sCount;
		return sCount;
	}
	
	public int removeFive(int[] freq, int[] count){
		int vCount = freq['V' - 'A'];
		if(vCount == 0) return 0;
		count['F'-'A'] -= vCount;
		count['I'-'A'] -= vCount;
		count['V'-'A'] -= vCount;
		count['E'-'A'] -= vCount;
		return vCount;
	}
	
	public int removeFour(int[] freq, int[] count){
		int fCount = freq['F' - 'A'];
		if(fCount == 0) return 0;
		count['F'-'A'] -= fCount;
		count['O'-'A'] -= fCount;
		count['R'-'A'] -= fCount;
		count['E'-'A'] -= fCount;
		return fCount;
	}
	public int removeThree(int[] freq, int[] count){
		int rCount = freq['R' - 'A'];
		if(rCount == 0) return 0;
		count['T'-'A'] -= rCount;
		count['H'-'A'] -= rCount;
		count['R'-'A'] -= rCount;
		count['E'-'A'] -= rCount;
		count['E'-'A'] -= rCount;
		return rCount;
	}
	public int removeOne(int[] freq, int[] count){
		int oCount = freq['O' - 'A'];
		count['O'-'A'] -= oCount;
		count['N'-'A'] -= oCount;
		count['E'-'A'] -= oCount;
		return oCount;
	}
	public int removeNine(int[] freq, int[] count){
		int nCount = freq['N' - 'A'];
		count['N'-'A'] -= nCount;
		count['I'-'A'] -= nCount;
		count['N'-'A'] -= nCount;
		count['E'-'A'] -= nCount;
		return nCount;
	}
	public int removeEight(int freq[], int[] count){
		return freq['T' - 'A'];
	}
	
	
	
}
