
public class VerifyPreorder {
	public static void main(String[] args){
		int nums[] = {10,7,3,2,5,8,15,12,18};
//		/* 			10
//		 * 		7      15 
//		 * 	  3  8    12      18
//		 *  2  5
//		 *      
//		 *       
//		 *
//		
		System.out.println(verifyPreorder(nums));
	}
	public static boolean verifyPreorder(int[] preorder) {
        if (preorder == null || preorder.length == 0 || preorder.length == 1) return true;
        int leftBound = preorder[0];
        for(int i = 1; i < preorder.length; i++) leftBound = preorder[i] < leftBound ? preorder[i] : leftBound;
        leftBound--;
        int root = 0;
        int rootVal = preorder[root];
        while(true) {
            int i = root;
            while(i + 1 < preorder.length && preorder[i+1] < preorder[i]) {
                if (preorder[i] <= leftBound) return false;
                i++;
            }
            if (i == preorder.length - 1) break;
            if (i == root) {
                leftBound = preorder[i];
                root = i + 1;
                rootVal = preorder[root];
                continue;
            }
            int leftMost = i;
            //start to find the right subtree
            i = 1;
            while(leftMost - i > root && leftMost + i < preorder.length){
                if(preorder[leftMost + i] >= rootVal) {
                    System.out.println("leftMost + i = " + preorder[leftMost + i] + " rootval = " + rootVal);
                    System.out.println("---------");
                    return false;
                }
                if(preorder[leftMost + i] > preorder[leftMost - i]) {
                    leftBound = preorder[leftMost - i];
                    root = leftMost + i;
                    rootVal = preorder[root];
                    break;
                }
                System.out.println("---------");
                i++;
            }
            if (i == root) {
                leftBound = preorder[i];
                root = i + 1;
                rootVal = preorder[root];
            }
            System.out.println("---------");
        }
        return true;
    }
}
