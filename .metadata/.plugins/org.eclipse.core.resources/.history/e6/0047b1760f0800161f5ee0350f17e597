public class WordLadder {
    public int ladderLength(String beginWord, String endWord, Set<String> wordList) {
        if (wordList == null || beginWord == null || endWord == null) return 0;
        HashMap<String, Integer> visited = new HashMap<String, Integer>();
        Queue<String> q = new LinkedList<String>();
        q.add(beginWord);
        visited.put(beginWord, 0);
        while(!q.isEmpty()) {
            String word = q.remove();
            char c  = 'a';
            for(int i = 0; i < word.length(); i++){
                for(int shift = 0; shift < 26; shift++) {
                    String newWord = word.substring(0, i) + (c+shift) + word.substring(i+1);
                    if(word.charAt(i) != (c+shift) && wordList.contains(newWord) && !visited.contains(newWord)){
                        q.add(newWord);
                        int newDist = visited.getKey(word) + 1;
                        if(newWord.equals(endWord)) return newDist;
                        visited.put(newWord, newDist);
                    }
                }
            }
        }
        return 0;
    }
}