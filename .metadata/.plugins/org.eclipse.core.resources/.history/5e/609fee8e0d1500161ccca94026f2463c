package GCJ1C;

import java.util.ArrayList;
import java.util.Scanner;

public class B {
	public static void main(String[] args) {
		B ins = new B();
		Scanner sc = new Scanner(System.in);
		int testCase = sc.nextInt();
		for(int i = 1; i <= testCase; i++) {
			int B = sc.nextInt();
			int M = sc.nextInt();
			char[][] conn = new char[B][B];
			for(int idx = 0; idx < B; idx++) Arrays.fill(conn[idx], '0');
			if(!solve(B, M, conn))
				System.out.println("Case #" + i + ": IMPOSSIBLE");

    		int count = sc.nextInt();
    		sum += count;
    		Letter aLetter = new Letter(j, count);
    		//System.out.println(aLetter.c);
    		list.add(aLetter);
    	}
    	//Collections.sort(list);
    	//System.out.println(list);
    	
    }
    sc.close();
	
	
	boolean boolean solve(int B, int M, char[][] conn) {
		//exact (n-2) * (n - 1) / 2 for n nodes
		
		if ((B-2) * (B-1) / 2  + 1 < M) return false;
		
		for(int i = 0; i < B - 1; i++) conn[i][i+1] = '1';
		
		int count = 1;
		
		for(int i = 0; i < B - 2; i++) {
			for(int j = i + 2; j < B; j++) {
				conn[i][j] = '1';
				count++;
				if(count == M) return true;
			}
		}
	}
}
