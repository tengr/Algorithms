package com.donriver.AustrianLotto;

//import static org.junit.Assert.assertEquals;
import java.io.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;
import java.util.Arrays;
import com.donriver.AustrianLotto.*;


public class AustrianLottoTest 
    extends TestCase
{
    private static final Logger LOGGER = LoggerFactory.getLogger(AustrianLottoTest.class);

    /**
     * Create the test case
     *
     * @param testName name of the test case
     */
    public AustrianLottoTest(String name)
    {
        super(name);
    }	
    /**
     * @return the suite of tests being tested
     */
    public static Test suite()
    {
        return new TestSuite( AustrianLottoTest.class );
    }
    public void testAustrianLotto(){
        //assertTrue(true);
        singlePickFullyCorrect();
        multiplePicksPartiallyCorrect();
        singlePickPartiallyCorrect();
        AustrianLotto austrianLotto = new AustrianLotto();
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader("/Users/ruichen/Documents/Algorithms/DonRiver/AustrianLotto/src/test/resources/testcases.txt"));
            String line = br.readLine();
            while (line != null) {
                LOGGER.info(line);
                //Data data = InputParser.parse(line);
                //assert(Arrays.equals(data.ret, austrianLotto.evaluate(data.drawing, data.picks)));
            }
            if(br != null) br.close();
        }catch (FileNotFoundException fnfe) {
            LOGGER.error(fnfe.getMessage());
        }catch (IOException ioe) {
            LOGGER.error(ioe.getMessage());
        }
    }

    public void multiplePicksPartiallyCorrect() {
        AustrianLotto austrianLotto = new AustrianLotto();
    	int[] expectedResult = { 1,  0,  2,  0,  0,  0,  0 };
        String drawing = "3 11 18 23 37 45";
        String[] picks = {"4 7 14 30 33 35", "1 11 12 25 37 38", "11 18 19 20 21 22"};
        assert(Arrays.equals(expectedResult, austrianLotto.evaluate(drawing, picks)));
    }

    public void singlePickFullyCorrect() {
        AustrianLotto austrianLotto = new AustrianLotto();
        int[] expectedResult = { 0,  0,  0,  0,  0,  0,  1 };
        String drawing = "3 18 23 11 37 45";
        String[] picks = {"3 11 18 23 37 45"};
        assert(Arrays.equals(expectedResult, austrianLotto.evaluate(drawing, picks)));
    }

    public void singlePickPartiallyCorrect() {
        AustrianLotto austrianLotto = new AustrianLotto();
        int[] expectedResult = { 0,  0,  0,  1,  0,  0,  0 };
        String drawing = "42 26 33 2 13 14";
        String[] picks = {"13 4 36 42 26 12"};
        assert(Arrays.equals(expectedResult, austrianLotto.evaluate(drawing, picks)));
    }
	
//	@Test
//    public void checkKeyValueType() 
//	{
//		CavContext cavcontext = new CavContext("src/test/java/");		
//		
//		LOGGER.info("Checking if key consumer_key is a valid string..");
//		cavcontext.keyValueAsString("consumer_key");
//		
//		LOGGER.info("Checking if key inf_ts is a valid int..");
//		cavcontext.keyValueAsInt("inf_ts");
//		
//		
//	}
}

