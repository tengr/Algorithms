package com.donriver.AustrianLotto;

import java.util.HashSet;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AustrianLotto
{
	public static final int NUM_DRAWS = 6;
	public static final int MIN = 1, MAX = 45;
	private static final String WHITESPACE = "\\s+";
	//private static final Logger LOGGER = LoggerFactory.getLogger(AustrianLotto.class);

	public static void Main(String[] args){
		System.out.println("Welcome to Austrian Lotto.");
	}

	public int[] evaluate(String drawing, String[] picks) 
	{	
		HashSet<Integer> drawingSet = new HashSet<Integer>();
		int[] ret = new int[NUM_DRAWS + 1]; //return
		try{
			for(int num : stringToIntArray(drawing)) {
				drawingSet.add(num);
			}
			for(String pick : picks) {
				evaluatePick(ret, drawingSet, pick);
			}	
		} catch (InvalidStringException e) {
			//LOGGER.error(e.getMessage());
		}
		return ret;
	}
	/* split string by whitespace 
	@return int array with all the nubmers in the string
	*/
	private int[] stringToIntArray(String s) throws InvalidStringException{
		String[] strArr = s.split(WHITESPACE);
		if(strArr.length != NUM_DRAWS){
			throw new InvalidStringException(s + " should contain " + NUM_DRAWS + " numbers instead of " + strArr.length);
		} 
		
		int[] intArr = new int[NUM_DRAWS]; //integer array to return
		int idx = 0;
		int[] freq = new int[MAX + 1]; //frequency count for numbers in in the string
		for(String ss : strArr) {
			int num = 0;
			try{
				num = Integer.parseInt(ss);
			}
			catch (NumberFormatException e) {
				//LOGGER.error(e.getMessage());
			}
			if(num < MIN || num > MAX) throw new RuntimeException(num + " is out of range in " + s);
			if(freq[num] > 0) throw new RuntimeException(s + " has a duplicate " + num);
			freq[num]++;
			intArr[idx++] = num;
		}

		return intArr;
	}

	private void evaluatePick(int ret[], HashSet<Integer> drawingSet, String pick) {
		int countCorrect = 0;
		for(int num : stringToIntArray(pick)) {
			if(drawingSet.contains(num)) countCorrect++;
		}
		ret[countCorrect]++;
	}
}