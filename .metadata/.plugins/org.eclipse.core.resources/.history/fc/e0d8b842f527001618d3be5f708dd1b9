package com.donriver.AustrianLotto;

import java.util.HashSet;
import java.util.Scanner;

public class AustrianLotto
{
	public static final int NUM_DRAWS = 6;
	public static final int MIN = 1, MAX = 45;
	private static final String WHITESPACE = "\\s+";
	//private static final Logger LOGGER = LoggerFactory.getLogger(AustrianLotto.class);

	public static void main(String[] args){
		System.out.println("Welcome to Austrian Lotto.");
		Scanner sc = new Scanner(System.in);
		while(true) {
			StringBuilder sb = new StringBuilder();
			System.out.println("please input drawing (six distinct numbers between 1 and 45, inclusive):");
			System.out.println("Enter \"Q\" to quit");
			System.out.println("format: \"3 11 18 23 37 45\" (quotation marks are optional)");
			String input = sc.nextLine();
			if(input.equals("Q")) break;
			sb.append(input);
			System.out.println("please input picks:");
			System.out.println("Enter \"Q\" to quit");
			if(input.equals("Q")) break;
			input = sc.nextLine();
			
			System.out.println("format: {\"4 7 14 30 33 35\", \"1 11 12 25 37 38\", \"11 18 19 20 21 22\"} (quotation marks and brackets are optional)");
			
			
		}
		sc.close();
	}

	public int[] evaluate(String drawing, String[] picks) 
	{	
		HashSet<Integer> drawingSet = new HashSet<Integer>();
		int[] ret = new int[NUM_DRAWS + 1]; //return
		for(int num : stringToIntArray(drawing)) {
			drawingSet.add(num);
		}
		for(String pick : picks) {
			evaluatePick(ret, drawingSet, pick);	
		} 
		return ret;
	}
	/* split string by whitespace 
	@return int array with all the nubmers in the string
	*/
	private int[] stringToIntArray(String s) {
		String[] strArr = s.split(WHITESPACE);
		if(strArr.length != NUM_DRAWS){
			throw new RuntimeException(s + " should contain " + NUM_DRAWS + " numbers instead of " + strArr.length);
		} 
		
		int[] intArr = new int[NUM_DRAWS]; //integer array to return
		int idx = 0;
		int[] freq = new int[MAX + 1]; //frequency count for numbers in in the string
		for(String ss : strArr) {
			int num = 0;
			num = Integer.parseInt(ss);
			if(num < MIN || num > MAX) throw new RuntimeException(num + " is out of range in " + s);
			if(freq[num] > 0) throw new RuntimeException(s + " has a duplicate " + num);
			freq[num]++;
			intArr[idx++] = num;
		}

		return intArr;
	}

	private void evaluatePick(int ret[], HashSet<Integer> drawingSet, String pick) {
		int countCorrect = 0;
		for(int num : stringToIntArray(pick)) {
			if(drawingSet.contains(num)) countCorrect++;
		}
		ret[countCorrect]++;
	}
}